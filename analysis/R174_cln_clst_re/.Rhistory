}
strvec <- sapply(vec, int2str)
return(strvec)
}
getMat <- function(dat, clst = "clst_result", key){
d <- dat %>%
dplyr::filter(!is.na(.[[clst]])) %>%
dplyr::select(one_of(c(clst, key))) %>%
dplyr::mutate(!!clst := clstInts2Strs(.[[clst]]))
smr <- d %>%
mutate(count = 1) %>%
group_by_(clst, key) %>%
summarise(count = sum(count))
mt <- smr %>%
tidyr::spread_(key = key, value = "count") %>%
purrr::map_at(.at = c(2:(ncol(.))), setNA2Zero) %>%
as.data.frame() %>%
`rownames<-`(.[[clst]]) %>%
dplyr::select(-matches(clst)) %>%
t()
#    dplyr::select(-ends_with("NA.")) %>%
return(mt)
}
trimLastNARow <- function(mat){
lastname <- rownames(mat) %>%
.[length(.)]
if(str_detect(lastname, "NA")){
mat <- mat %>%
.[c(1:nrow(.) -1),]
}else{
print("NA row not detected.")
}
return(mat)
}
getChiseqFish <- function(mat){
print(chisq.test(mat))
print(fisher.test(mat))
}
checkLab_I <- function(dat, i, get_bool =F){
key_i <- colnames(dat)[i]
print(paste("analysing label: ", key_i, sep=""))
mat_i <- getMat(dat, key = key_i)
print(htmltools::tagList(
DT::datatable(data = mat_i, caption = key_i)
))
mat_i %>%
trimLastNARow() %>%
getChiseqFish()
if(get_bool){
return(mat_i)
}
}
ggsave2 <- function(plot, wid=9, hei=9){
plot_name <- deparse(substitute(plot))
file_name <- paste(plot_name, ".png", sep = "",collapse = "")
ggsave(filename = file_name,plot = plot,device = "png",width = wid, height = hei,dpi = 300,units = "cm")
}
View(smt)
View(dt)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE, echo=TRUE)
source("http://bioconductor.org/biocLite.R")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE, echo=TRUE)
# source("http://bioconductor.org/biocLite.R")
require("stringr")
require("tidyverse")
require("MASS")
# require("ggplot2")
# require("dplyr")
# require("magrittr")
require(extrafont)
loadfonts(quiet = T)
#biocLite("GEOquery")
##require(GEOquery)
set.seed("20180927")
d <- data.table::fread(file = "./clst_clin2.csv",sep = ",", header = T, stringsAsFactors = F) %>%
as.data.frame()
class(d)
dt <- d %>%
t() %>%
as.data.frame() %>%
dplyr::mutate(rowname = rownames(.)) %>%
.[,c(ncol(.), 1:ncol(.) -1)]
# d %>%
#   DT::datatable(caption = "clinicaldata and clust")
trimAllNAcol <- function(d){
na_ind <- colnames(d)[apply(X = d, 2, function(vec){return(sum(!is.na(vec)))}) != 0]
d <- d %>%
dplyr::select(one_of(na_ind))
return(d)
}
colnames(d)[1:4]
getKeyWord <- function(d, clst = "clst_result", key){
cln_ind <- str_detect(colnames(d), "^Row")
clst_ind <- str_detect(colnames(d), clst)
key_ind <- str_detect(colnames(d), key)
ind <- colnames(d)[cln_ind | clst_ind | key_ind]
d <- d %>%
dplyr::select(one_of(ind))
return(d)
}
clst <- "clst_result"
key <- "ablation"
d_ab <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "indicator"
d_ind <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "bilirubin"
d_bil <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "creatinine"
d_cre <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
dmeta <- d
for(i in 4:ncol(d)){
col_i <- colnames(d)[i]
dmeta[[col_i]] <- !is.na(d[[col_i]])
}
class(dmeta)
#
# dmeta <- dmeta %>%
#   dplyr::group_by(clst_result)
# i <- 50
# col_i <- colnames(dmeta)[i]
dmeta_i <- dmeta %>%
`colnames<-`(str_replace_all(colnames(.), "-|\\.", "_")) %>%
dplyr::summarise(sum(patient_ablations_ablation_2_month_of_form_completion))
#dplyr::summarise()
#dmeta[,i]
#i <- 15
getClstSum <- function(dmeta, i){
col_i <- colnames(dmeta)[i]
dtb <- dmeta %>%
dplyr::select(one_of(c("clst_result", col_i))) #%>%
dtb[["col_i"]] <- dtb[[col_i]]
#    mutate(col_i = .[[col_i]])
sm <- dtb %>%
group_by(clst_result) %>%
summarise(sum(col_i))
colnames(sm)[2] <- col_i
return(sm)
}
#dmeta[,15]
sm <- getClstSum(dmeta, 4)
for(i in 5:ncol(dmeta)){
#print(i)
sm <- cbind(sm, getClstSum(dmeta, i)[,2])
}
smt <- sm %>%
t() %>%
as.data.frame() %>%
dplyr::mutate(labels = rownames(.))
DT::datatable(data = smt, caption = "variable and non-na count\nin two cluster")
setNA2Zero <- function(vec){
vec0 <- ifelse(is.na(vec), 0, vec)
return(vec0)
}
setNA2Emp <- function(vec){
vec0 <- ifelse(is.na(vec), "", vec)
return(vec0)
}
clstInts2Strs <- function(vec){
int2str <- function(num){
if(num ==1){
return("Major")
}else if(num ==2){
return("Minor")
}else{
return("Unknown")
}
}
strvec <- sapply(vec, int2str)
return(strvec)
}
getMat <- function(dat, clst = "clst_result", key){
d <- dat %>%
dplyr::filter(!is.na(.[[clst]])) %>%
dplyr::select(one_of(c(clst, key))) %>%
dplyr::mutate(!!clst := clstInts2Strs(.[[clst]]))
smr <- d %>%
mutate(count = 1) %>%
group_by_(clst, key) %>%
summarise(count = sum(count))
mt <- smr %>%
tidyr::spread_(key = key, value = "count") %>%
purrr::map_at(.at = c(2:(ncol(.))), setNA2Zero) %>%
as.data.frame() %>%
`rownames<-`(.[[clst]]) %>%
dplyr::select(-matches(clst)) %>%
t()
#    dplyr::select(-ends_with("NA.")) %>%
return(mt)
}
trimLastNARow <- function(mat){
lastname <- rownames(mat) %>%
.[length(.)]
if(str_detect(lastname, "NA")){
mat <- mat %>%
.[c(1:nrow(.) -1),]
}else{
print("NA row not detected.")
}
return(mat)
}
getChiseqFish <- function(mat){
print(chisq.test(mat))
print(fisher.test(mat))
}
checkLab_I <- function(dat, i, get_bool =F){
key_i <- colnames(dat)[i]
print(paste("analysing label: ", key_i, sep=""))
mat_i <- getMat(dat, key = key_i)
print(htmltools::tagList(
DT::datatable(data = mat_i, caption = key_i)
))
mat_i %>%
trimLastNARow() %>%
getChiseqFish()
if(get_bool){
return(mat_i)
}
}
ggsave2 <- function(plot, wid=9, hei=9){
plot_name <- deparse(substitute(plot))
file_name <- paste(plot_name, ".png", sep = "",collapse = "")
ggsave(filename = file_name,plot = plot,device = "png",width = wid, height = hei,dpi = 300,units = "cm")
}
key <- "patient.age_at_initial_pathologic_diagnosis"
d_age <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol() %>%
dplyr::filter(!is.na(.[[key]])) %>%
mutate_(key = key)
age_major <- d_age %>%
dplyr::filter(clst_result ==1) %>%
.[[key]]
age_minor <- d_age %>%
dplyr::filter(clst_result ==2) %>%
.[[key]]
ks.test(age_major, age_minor)
p_age <- ggplot()+theme_classic()+
geom_boxplot(data = d_age, mapping =  aes(x= factor(clst_result), y = key),outlier.colour = NA) +
geom_jitter(data = d_age, mapping = aes(x= factor(clst_result), y = key), color ="red", size = 0.5) +
ylab(key) +ggtitle(key)
p_age
ggsave2(p_age, wid = 9)
key <- "patient.neoplasm_histologic_grade"
d_hist <- d %>%
getKeyWord(key = key) %>%
mutate_(key = key)
mt <- checkLab_I(d_hist, i = 3, get_bool = T)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE, echo=TRUE)
# source("http://bioconductor.org/biocLite.R")
require("stringr")
require("tidyverse")
require("MASS")
# require("ggplot2")
# require("dplyr")
# require("magrittr")
require(extrafont)
loadfonts(quiet = T)
#biocLite("GEOquery")
##require(GEOquery)
set.seed("20180927")
d <- data.table::fread(file = "./clst_clin2.csv",sep = ",", header = T, stringsAsFactors = F) %>%
as.data.frame()
class(d)
dt <- d %>%
t() %>%
as.data.frame() %>%
dplyr::mutate(rowname = rownames(.)) %>%
.[,c(ncol(.), 1:ncol(.) -1)]
# d %>%
#   DT::datatable(caption = "clinicaldata and clust")
trimAllNAcol <- function(d){
na_ind <- colnames(d)[apply(X = d, 2, function(vec){return(sum(!is.na(vec)))}) != 0]
d <- d %>%
dplyr::select(one_of(na_ind))
return(d)
}
colnames(d)[1:4]
getKeyWord <- function(d, clst = "clst_result", key){
cln_ind <- str_detect(colnames(d), "^Row")
clst_ind <- str_detect(colnames(d), clst)
key_ind <- str_detect(colnames(d), key)
ind <- colnames(d)[cln_ind | clst_ind | key_ind]
d <- d %>%
dplyr::select(one_of(ind))
return(d)
}
clst <- "clst_result"
key <- "ablation"
d_ab <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "indicator"
d_ind <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "bilirubin"
d_bil <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
key <- "creatinine"
d_cre <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol()
View(d_cre)
dmeta <- d
for(i in 4:ncol(d)){
col_i <- colnames(d)[i]
dmeta[[col_i]] <- !is.na(d[[col_i]])
}
class(dmeta)
dmeta_i <- dmeta %>%
`colnames<-`(str_replace_all(colnames(.), "-|\\.", "_")) %>%
dplyr::summarise(sum(patient_ablations_ablation_2_month_of_form_completion))
#dmeta[,i]
#i <- 15
getClstSum <- function(dmeta, i){
col_i <- colnames(dmeta)[i]
dtb <- dmeta %>%
dplyr::select(one_of(c("clst_result", col_i))) #%>%
dtb[["col_i"]] <- dtb[[col_i]]
#    mutate(col_i = .[[col_i]])
sm <- dtb %>%
group_by(clst_result) %>%
summarise(sum(col_i))
colnames(sm)[2] <- col_i
return(sm)
}
#dmeta[,15]
sm <- getClstSum(dmeta, 4)
for(i in 5:ncol(dmeta)){
#print(i)
sm <- cbind(sm, getClstSum(dmeta, i)[,2])
}
#dmeta[,15]
sm <- getClstSum(dmeta, 4)
for(i in 5:ncol(dmeta)){
print(i)
# sm <- cbind(sm, getClstSum(dmeta, i)[,2])
}
break
for(i in 5:ncol(dmeta)){
print(i)
sm <- cbind(sm, getClstSum(dmeta, i)[,2])
break()
}
View(sm)
View(dmeta)
dmeta <- d
for(i in 4:ncol(d)){
col_i <- colnames(d)[i]
dmeta[[col_i]] <- !is.na(d[[col_i]])
}
class(dmeta)
#
# dmeta <- dmeta %>%
#   dplyr::group_by(clst_result)
# i <- 50
# col_i <- colnames(dmeta)[i]
dmeta_i <- dmeta %>%
`colnames<-`(str_replace_all(colnames(.), "-|\\.", "_")) %>%
dplyr::summarise(sum(patient_ablations_ablation_2_month_of_form_completion))
#dplyr::summarise()
#dmeta[,i]
#i <- 15
getClstSum <- function(dmeta, i){
col_i <- colnames(dmeta)[i]
dtb <- dmeta %>%
dplyr::select(one_of(c("clst_result", col_i))) #%>%
dtb[["col_i"]] <- dtb[[col_i]]
#    mutate(col_i = .[[col_i]])
sm <- dtb %>%
group_by(clst_result) %>%
summarise(sum(col_i))
colnames(sm)[2] <- col_i
return(sm)
}
#dmeta[,15]
sm <- getClstSum(dmeta, 4)
for(i in 5:ncol(dmeta)){
print(i)
sm <- cbind(sm, getClstSum(dmeta, i)[,2])
# break()
}
smt <- sm %>%
t() %>%
as.data.frame() %>%
dplyr::mutate(labels = rownames(.))
DT::datatable(data = smt, caption = "variable and non-na count\nin two cluster")
setNA2Zero <- function(vec){
vec0 <- ifelse(is.na(vec), 0, vec)
return(vec0)
}
setNA2Emp <- function(vec){
vec0 <- ifelse(is.na(vec), "", vec)
return(vec0)
}
clstInts2Strs <- function(vec){
int2str <- function(num){
if(num ==1){
return("Major")
}else if(num ==2){
return("Minor")
}else{
return("Unknown")
}
}
strvec <- sapply(vec, int2str)
return(strvec)
}
getMat <- function(dat, clst = "clst_result", key){
d <- dat %>%
dplyr::filter(!is.na(.[[clst]])) %>%
dplyr::select(one_of(c(clst, key))) %>%
dplyr::mutate(!!clst := clstInts2Strs(.[[clst]]))
smr <- d %>%
mutate(count = 1) %>%
group_by_(clst, key) %>%
summarise(count = sum(count))
mt <- smr %>%
tidyr::spread_(key = key, value = "count") %>%
purrr::map_at(.at = c(2:(ncol(.))), setNA2Zero) %>%
as.data.frame() %>%
`rownames<-`(.[[clst]]) %>%
dplyr::select(-matches(clst)) %>%
t()
#    dplyr::select(-ends_with("NA.")) %>%
return(mt)
}
trimLastNARow <- function(mat){
lastname <- rownames(mat) %>%
.[length(.)]
if(str_detect(lastname, "NA")){
mat <- mat %>%
.[c(1:nrow(.) -1),]
}else{
print("NA row not detected.")
}
return(mat)
}
getChiseqFish <- function(mat){
print(chisq.test(mat))
print(fisher.test(mat))
}
checkLab_I <- function(dat, i, get_bool =F){
key_i <- colnames(dat)[i]
print(paste("analysing label: ", key_i, sep=""))
mat_i <- getMat(dat, key = key_i)
print(htmltools::tagList(
DT::datatable(data = mat_i, caption = key_i)
))
mat_i %>%
trimLastNARow() %>%
getChiseqFish()
if(get_bool){
return(mat_i)
}
}
ggsave2 <- function(plot, wid=9, hei=9){
plot_name <- deparse(substitute(plot))
file_name <- paste(plot_name, ".png", sep = "",collapse = "")
ggsave(filename = file_name,plot = plot,device = "png",width = wid, height = hei,dpi = 300,units = "cm")
}
key <- "patient.age_at_initial_pathologic_diagnosis"
d_age <- d %>%
getKeyWord(key = key) %>%
trimAllNAcol() %>%
dplyr::filter(!is.na(.[[key]])) %>%
mutate_(key = key)
age_major <- d_age %>%
dplyr::filter(clst_result ==1) %>%
.[[key]]
age_minor <- d_age %>%
dplyr::filter(clst_result ==2) %>%
.[[key]]
ks.test(age_major, age_minor)
require(lawstat)
lawstat::brunner.munzel.test(age_major, age_minor)
p_age <- ggplot()+theme_classic()+
geom_boxplot(data = d_age, mapping =  aes(x= factor(clst_result), y = key),outlier.colour = NA) +
geom_jitter(data = d_age, mapping = aes(x= factor(clst_result), y = key), color ="red", size = 0.5) +
ylab(key) +ggtitle(key)
p_age
ggsave2(p_age, wid = 9)
key <- "patient.neoplasm_histologic_grade"
d_hist <- d %>%
getKeyWord(key = key) %>%
mutate_(key = key)
mt <- checkLab_I(d_hist, i = 3, get_bool = T)
mt
openxlsx::write.xlsx(x = mt, file = "./R174_hist_grade_dist.xlsx")
openxlsx::write.xlsx(x = mt, file = "./R174_hist_grade_dist.xlsx", rownames = T)
mt
mt_ad <- mt %>%
as.data.frame() %>%
mutate(rowname = rownames(.)) %>%
dplyr::select(rowname, everything())
mt_ad
openxlsx::write.xlsx(x = mt_ad, file = "./R174_hist_grade_dist.xlsx")
mt_ad <- mt %>%
as.data.frame() %>%
mutate(rowname = rownames(.)) %>%
dplyr::select(rowname, everything()) %>%
dplyr::rename(histological_grade = rowname)
openxlsx::write.xlsx(x = mt_ad, file = "./R174_hist_grade_dist.xlsx")
