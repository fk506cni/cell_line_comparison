}
d <- as.matrix(d)
mind <- min(d)
maxd <- max(d)
pairs.breaks <- c(seq(mind, maxd, length.out=256))
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram ="none" ,Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F)
g2a <- read.table(file = "2Garray.annot.txt",header = T,sep = "\t",quote = "",check.names = F,fill = T)
g2a$group <- ifelse(g2a$avg_sub>0, "red", "blue")
View(gene_list)
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list,]
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list$symbol,]
g2a1 <- g2a1[!duplicated(g2a1$Row.names),]
View(g2a1)
g2a1 <- g2a1[g2a1$q.value <- 0.01,]
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list$symbol,]
g2a1 <- g2a1[!duplicated(g2a1$Row.names),]
g2a1 <- g2a1[g2a1$q.value < 0.01,]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
g2a <- read.table(file = "2Garray.annot.txt",header = T,sep = "\t",quote = "",check.names = F,fill = T)
g2a$group <- ifelse(g2a$avg_sub>0, "red", "blue")
rownames(g2a) <- paste(g2a$Gene.Symbol,g2a$Row.names,sep="_")
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list$symbol,]
g2a1 <- g2a1[!duplicated(g2a1$Row.names),]
g2a1 <- g2a1[g2a1$q.value < 0.05,]
g2a1 <- g2a1[g2a1$q.value < 0.01,]
g2a1_d <- g2a1[,c(2:23)]
View(g2a1_d)
heatmap.2(g2a1_d,cexRow = 0.2,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "2 cell lines cluster",RowSideColors = g2$group)
heatmap.2(as.matrix(g2a1_d),cexRow = 0.2,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "2 cell lines cluster",RowSideColors = g2$group)
heatmap.2(as.matrix(g2a1_d),cexRow = 0.2,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "2 cell lines cluster",RowSideColors = g2a1$group)
heatmap.2(as.matrix(g2a1_d),cexRow = 0.2,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "EMT_related_genes",RowSideColors = g2a1$group)
heatmap.2(as.matrix(g2a1_d),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "EMT_related_genes",RowSideColors = g2a1$group)
bc <- read.csv(file = "gbarcode_v3.csv",header = T,sep = ",",stringsAsFactors = F,row.names = 1,check.names = F)
bc <- read.csv(file = "gbarcode_v3.csv",header = T,sep = ",",stringsAsFactors = F,row.names = 1,check.names = F)
View(bc)
bc <- bc[rownames(bc) %in% g2a1$Row.names,]
View(bc)
bc_labels <- c(rep(NA, dim(bc)[1]))
for (i in c(1:dim(bc)[1])){
bc_labels[i] <- rownames(g2a1[g2a1$Row.names == rownames(bc)[i],])
}
bc_labels <- c(rep(NA, dim(bc)[1]))
View(g2a1)
sum(duplicated(g2a1$Row.names))
for (i in c(1:dim(bc)[1])){
bc_labels[i] <- rownames(g2a1[g2a1$Row.names == rownames(bc)[i],])
}
for (i in c(1:dim(bc)[1])){
rownames(bc)[i] <- rownames(g2a1[g2a1$Row.names == rownames(bc)[i],])
}
bc_t <- as.matrix(t(bc))
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "Barcode_comparison")
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),breaks = pairs.breaks,symkey = F, main = "Barcode_comparison")
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison")
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,labRow = g2$Gene.Symbol,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison")
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison")
View(bc_t)
bc <- read.csv(file = "gbarcode_v3.csv",header = T,sep = ",",stringsAsFactors = F,row.names = 1,check.names = F)
str_replace(rownames(bc),pattern = "\:.*$","")
str_replace(rownames(bc),pattern = "\\:.*$","")
View(bc)
str_replace(colnames(bc),pattern = "\\:.*$","")
colnames(bc) <- str_replace(colnames(bc),pattern = "\\:.*$","")
bc <- bc[rownames(bc) %in% g2a1$Row.names,]
bc_labels <- c(rep(NA, dim(bc)[1]))
for (i in c(1:dim(bc)[1])){
rownames(bc)[i] <- rownames(g2a1[g2a1$Row.names == rownames(bc)[i],])
}
bc_t <- as.matrix(t(bc))
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = bc_t)
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = bc_t)
heatmap.2(as.matrix(bc_t),cexRow = 0.4,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t))
View(bc_t)
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.2,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,6))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.5,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,6))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,6))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(4,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(3,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "both",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "col",Rowv = T,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "row",Rowv = T,Colv=F,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",labRow = rownames(bc_t),margins = c(5,4))
heatmap.2(as.matrix(bc_t),cexRow = 0.2,cexCol = 0.3,trace = "none",dendrogram = "row",Rowv = T,Colv=F,scale = "none",srtRow = 45,srtCol = 45,col = bluered(255),symkey = F, main = "Barcode_comparison",margins = c(5,4))
q()
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
View(g2)
d_col <- g2[g2$Row.names %in% annot_emt$`Probe Set ID`]$group
d_col <- g2[g2$Row.names %in% annot_emt$`Probe Set ID`,]$group
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram ="none" ,Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col)
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram ="none" ,Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col)
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col)
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
d_col <- c(rep(NA, dim(d)[1]))
d <- mas5log[rownames(mas5log) %in% annot_emt$`Probe Set ID`,]
for (i in c(1:dim(d)[1])){
d_col[i] <-  g2[g2$Row.names == rownames(d)[i],]$group
}
d_col
for (i in c(1:dim(d)[1])){
rownames(d)[i] <- annot_emt[annot_emt$`Probe Set ID` == rownames(d)[i],]$rowname
}
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
annot_emt <- annot[annot$`Gene Symbol`%in% gene_list$symbol,]
annot_emt <- annot_emt[!duplicated(annot_emt$`Probe Set ID`),]
d <- mas5log[rownames(mas5log) %in% annot_emt$`Probe Set ID`,]
for (i in c(1:dim(d)[1])){
rownames(d)[i] <- annot_emt[annot_emt$`Probe Set ID` == rownames(d)[i],]$rowname
}
d <- as.matrix(d)
mind <- min(d)
maxd <- max(d)
pairs.breaks <- c(seq(mind, maxd, length.out=256))
heatmap.2(d,cexRow = 0.5,cexCol = 0.5,trace = "none",dendrogram = "row",Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
g2a <- read.table(file = "2Garray.annot.txt",header = T,sep = "\t",quote = "",check.names = F,fill = T)
g2a$group <- ifelse(g2a$avg_sub>0, "red", "blue")
rownames(g2a) <- paste(g2a$Gene.Symbol,g2a$Row.names,sep="_")
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list$symbol,]
View(g2a1)
g2a1 <- g2a[g2a$Gene.Symbol %in% gene_list$symbol,]
g2a1 <- g2a1[!duplicated(g2a1$Row.names),]
g2a1 <- g2a1[g2a1$q.value < 0.001,]
View(g2a1)
g2a1 <- g2a1[g2a1$q.value < 0.0001,]
View(g2a1)
View(g2)
View(mas5log)
View(annot)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
mg_annot <- merge(mas5log, annot, by.x=0, by.y=1, sort=F)
View(mg_annot)
unzip(zipfile = "./HT_HG-U133A.na36.annot.csv.zip")
source("http://bioconductor.org/biocLite.R")
biocLite("hthgu133acdf")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
#biocLite("hthgu133acdf")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
View(annot_emt)
View(annot_emt)
View(d)
colslider <- c(rep("pink",2),rep("cyan", 2))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="none" ,Rowv = F, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,main = "GSE10393",labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
lmat <- rbind(c(5,6,6),
c(0,0,2),
c(4,1,3))
lhei <- c(1.5,0.2,4)
lwid <- c(0.2,0.2,4)
colslider <- c(rep("pink",2),rep("cyan", 2))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="none" ,Rowv = F, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,main = "GSE10393",labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="none" ,Rowv = F, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
View(annot_emt)
View(dg2)
View(g2)
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram = "row",Rowv = F, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram = "row",Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
d_col <- c(rep(NA, dim(d)[1]))
for (i in c(1:dim(d)[1])){
d_col[i] <-  g2[g2$Row.names == rownames(d)[i],]$group
}
annot_emt <- annot[annot$`Probe Set ID` %in% g2$Row.names,]
annot_emt <- annot_emt[!duplicated(annot_emt$`Probe Set ID`),]
d <- mas5log[rownames(mas5log) %in% annot_emt$`Probe Set ID`,]
d_col <- c(rep(NA, dim(d)[1]))
for (i in c(1:dim(d)[1])){
d_col[i] <-  g2[g2$Row.names == rownames(d)[i],]$group
}
d_col
for (i in c(1:dim(d)[1])){
rownames(d)[i] <- annot_emt[annot_emt$`Probe Set ID` == rownames(d)[i],]$rowname
}
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram = "row",Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
annot_emt_mg <- merge(annot_emt, g2, by.x="Probe Set ID", by.y = "Row.names")
View(annot_emt_mg)
annot_emt_mg <- annot_emt_mg[sort.list(annot_emt_mg$avg_sub, decreasing = T),]
d <- mas5log[rownames(mas5log) %in% annot_emt_mg$`Probe Set ID`,]
ref_sort <- function(sort_vector, ref_vector){
result_vector <- c()
for(i in c(1:length(ref_vector))){
index_i <- which(sort_vector==ref_vector[i])
result_vector <- c(result_vector, index_i)
}
return(result_vector)
}
d <- d[ref_sort(sort_vector = row.names(d), ref_vector = annot_emt_mg$`Probe Set ID`),]
d_col <- c(rep(NA, dim(d)[1]))
for (i in c(1:dim(d)[1])){
d_col[i] <-  g2[g2$Row.names == rownames(d)[i],]$group
}
d_col
for (i in c(1:dim(d)[1])){
rownames(d)[i] <- annot_emt[annot_emt$`Probe Set ID` == rownames(d)[i],]$rowname
}
d <- as.matrix(d)
mind <- min(d)
maxd <- max(d)
pairs.breaks <- c(seq(mind, maxd, length.out=256))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram ="both" ,Rowv = T, Colv = T,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,main = "GSE10393")
lmat <- rbind(c(5,6,6),
c(0,0,2),
c(4,1,3))
lhei <- c(1.5,0.2,4)
lwid <- c(0.2,0.2,4)
colslider <- c(rep("pink",2),rep("cyan", 2))
d_a
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram = "row",Rowv = T, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
heatmap.2(d,cexRow = 0.5,cexCol = 1,trace = "none",dendrogram = "none",Rowv = F, Colv = F,scale = "none",srtRow = 45,srtCol = 45,col =bluered(255),breaks = pairs.breaks,symkey = F, RowSideColors = d_col,ColSideColors = colslider,labRow = "",lmat = lmat,lhei = lhei, lwid = lwid, margins = c(7,1))
g_id <- "GSE10393"
ggheat <- function(df,
clst_method="average",
dist_method="spearman",
colslider, rowslider,
ColV=T, RowV=T,
colnames=T, rownames=T,
colangle=45, rowangle=45,
colours=c("blue", "white", "red"),
key.axis.fontsize=12,
main="title",
add_p=NULL,
lmat=NULL,
lhei=NULL,lwid=NULL,
font.size=14,
col_name_label_mod = NULL){
require(ggplot2)
require(reshape2)##for melting
require(grid)
require(gridExtra)
require(ggdendro)
require(scales)
##common theme function
theme_ggh <- function(font.size=10,legend.position = "none") {
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.spacing = element_blank(),
panel.background = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"),
text = element_text(family = "Arial",size=font.size,lineheight = 0.7),
legend.position = "none"
)
}
##blank grid for plotting blank
blank_grid <- grid.rect(gp=gpar(col="white"))
df <- as.data.frame(df)
##clustering if needed
cluster_data <- list()
if(ColV==T){
dist_x <- as.dist(1-cor(as.matrix(df),method = dist_method))
clst_x <- hclust(dist_x,method = clst_method)
df <- df[,clst_x$order]
colslider <- colslider[clst_x$order]
if(!is.null(col_name_label_mod)){
col_name_label_mod <- col_name_label_mod[clst_x$order]
}
cluster_data <- append(cluster_data, list(clst_x))
}
if(RowV==T){
dist_y <- as.dist(1-cor(as.matrix(t(df)),method = dist_method))
clst_y <- hclust(dist_y,method = clst_method)
df <- df[clst_y$order,]
rowslider <- rowslider[clst_y$order]
cluster_data <- append(cluster_data, list(clst_y))
}
##matrix prepareation
colname <- colnames(df)
colname <- data.frame(text=colname, x=c(1:length(colname)),colslider=colslider)
colnames(df) <- c(1:ncol(df))
if(!is.null(col_name_label_mod)){
colname$original_label <- colname$text
colname$text <- col_name_label_mod
}
rowname <- rownames(df)
rowname <- data.frame(text=rowname, y=c(1:length(rowname)),rowslider=rowslider)
rownames(df) <- c(1:nrow(df))
tiledata <- melt(as.matrix(df))
##heatmap is p1
p1 <- ggplot()+
geom_tile(data = tiledata, mapping = aes(x=Var2, y = Var1, fill=value))+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
scale_fill_gradient2(low = colours[1],mid = colours[2],high = colours[3],midpoint = (max(tiledata$value)+min(tiledata$value))/2)+
guides(fill=F)+
theme_ggh()
#p1
##colslider is cols
cols <- ggplot()+
geom_tile(data=colname,aes(x=x,y=0,fill=colslider))+
scale_fill_identity(guide = "legend")+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
theme_ggh()
##
#cols
##rowslider is rows
rows <- ggplot()+
geom_tile(data=rowname,aes(x=0,y=y,fill=rowslider))+
scale_fill_discrete(name="category")+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
theme(legend.text = element_text(family = "Arial",size=font.size,lineheight = 0.7),
legend.title =element_text(family = "Arial",size=font.size+2,lineheight = 0.7))
rows_grob <- ggplot_gtable(ggplot_build(rows))
id.legend <- which(sapply(rows_grob$grobs, function(x) x$name)=="guide-box")
rows_legend <- rows_grob$grobs[[id.legend]]
rows <- ggplot()+
geom_tile(data=rowname,aes(x=0,y=y,fill=rowslider))+
scale_fill_identity(guide = "legend")+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
theme_ggh()
#rows
##col dendrogram if needed
if(ColV==T){
coldend <- as.dendrogram(clst_x)
#plot(coldend)
coldend <- segment(dendro_data(coldend))
cold <- ggplot()+
geom_segment(data=coldend,aes(x=x, y=y, xend=xend, yend=yend))+
scale_x_continuous(expand=c(0,0),limits = c(0.5,max(coldend$xend)+0.5))+
scale_y_continuous(expand=c(0,0))+
theme_ggh()
#cold
}else{
cold <- blank_grid
}
##row dendrogram if needed
if(RowV==T){
rowdend <- as.dendrogram(clst_y)
#plot(rowdend)
rowdend <- segment(dendro_data(rowdend))
rowd <- ggplot()+
geom_segment(data = rowdend,aes(x=x, y=y, xend=xend, yend=yend))+
scale_x_continuous(expand=c(0,0),limits = c(0.5,max(rowdend$xend)+0.5))+
scale_y_continuous(expand=c(0,0))+
theme_ggh()+
coord_flip()
#                    scale_x_continuous(expand=c(0,0),limits = c(0.5,max(rowdend$xend)+0.5))+
rowd
}else{
rowd <- blank_grid
}
##key histgram(density plot)
key_hist <- hist(tiledata$value,breaks = 50,plot = F)
max_hist <- max(key_hist$density)
key_density <- data.frame(range=seq(min(tiledata$value)-1, max(tiledata$value)+1, 0.02))
key_density_range <- density(tiledata$value)
key <-  ggplot()+
geom_tile(data = key_density,
mapping = aes(x = range, y=max_hist/2*1.2,fill=range,width=0.02, height=max_hist*1.2),
show.legend = F)+
scale_fill_gradient2(low = colours[1],mid = colours[2],high = colours[3],
midpoint = (max(tiledata$value)+min(tiledata$value))/2,
limits=c(max(tiledata$value),min(tiledata$value)),
oob=squish)+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
geom_histogram(data = tiledata,mapping = aes(x=value,y=..density..),
alpha=0.8, binwidth = (max(tiledata$value)-min(tiledata$value))/50)+
guides(fill=F,colour=F)+xlab("")+ylab("")+
theme_classic()+
theme(text = element_text(family = "Arial",size=font.size,lineheight = 0.7),
axis.text.x =  element_text(family = "Arial",size=key.axis.fontsize),
axis.text.y =  element_text(family = "Arial",size=key.axis.fontsize),
plot.margin = unit(c(0,0,-0.02,-0.015),"native"))
#key
##colnames
#additional modification about col label potision.
#two TIMP2 probe sets are too closed.
sub_timp <- 1
timps <- colname[str_detect(colname$text, "^TIMP2"),]
colname$x[timps$x[1]] <- colname$x[timps$x[1]] - sub_timp
colname$x[timps$x[2]] <- colname$x[timps$x[2]] + sub_timp
##colnames
vjust_col <- 0
hjust_col <- 0
if(colnames==T){
colname_label <- ggplot()+
geom_text(data=colname,mapping = aes(x=x,y=0, label=text,angle=colangle),
size=(5/14)*font.size,vjust=vjust_col, hjust= hjust_col)+
scale_x_continuous(expand=c(0,0),limits = c(min(colname$x)-0.5, max(colname$x)+0.5))+
scale_y_continuous(expand=c(0,0),limits = c(0,1))+
theme_ggh(font.size =font.size)
colname_table <- ggplot_gtable(ggplot_build(colname_label))
colname_table$layout$clip[colname_table$layout$name=="panel"] <- "off"
#class(colname_table)
#colname_label
}else{
colname_label <- blank_grid
colname_table <- blank_grid
}
##rownames
if(rownames==T){
rowname_label <- ggplot()+
geom_text(data = rowname,mapping = aes(x=0,y=y, label=text,angle=rowangle),
size=font.size,vjust=+1)+
scale_x_continuous(expand=c(0,0),limits = c(0,0))+
scale_y_continuous(expand=c(0,0),limits = c(min(rowname$y)-0.5, max(rowname$y)+0.5))+
theme_ggh(font.size =font.size)
rowname_table <- ggplot_gtable(ggplot_build(rowname_label))
rowname_table$layout$clip[rowname_table$layout$name=="panel"] <- "off"
#rowname_label
}else{
rowname_label <- blank_grid
rowname_table <- blank_grid
}
if(!is.null(add_p)){
add <- add_p
}else{
add <- blank_grid
}
#add <- b1
#add <- rows_legend
##layout
if(is.null(lmat) | is.null(lwid) | is.null(lhei)){
lmat <- rbind(c(2,1,1,8,8,8),
c(1,1,9,8,8,8),
c(1,1,4,8,8,8),
c(1,10,3,5,7,1),
c(1,1,6,1,1,1))
lwid <- c(0.01, 0.2, 1.3, 0.05,0.2,0.15)
lhei <- c(0.12,0.4,0.1,2,0.01)
}
g1 <- grid.arrange(blank_grid,#1
add,#2
p1,#3
cols,#4
rows,#5
cold,#6
rowd,#7
key,#8
colname_table,#9
rowname_table,#10
layout_matrix=lmat,heights=lhei, widths=lwid,
top=textGrob(main, gp=gpar(fontsize=20,fontfamily="Arial")))
result_list <- list(plot_data=g1, cluster_data=cluster_data)
return(result_list)
}
font_size <- 14
lmat <- rbind(c(2,8,8,8,1,6),
c(1,8,8,8,1,1),
c(1,1,9,1,1,1),
c(1,1,4,1,1,1),
c(1,10,3,5,7,1)
)
lwid <- c(0.01, 0.05, 1.3, 0.05,0.05,0.01)
lhei <- c(0.12,0.4,0.7,0.1,1.4)
h <- d2
h <- d
g <- ggheat(df=h,ColV = F,RowV = F, colslider=colslider, rowslider=d_col,colnames = T, rownames = F,main = g_id,lhei = lhei, lwid = lwid, lmat = lmat,font.size = font_size)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE,cache.lazy = FALSE)
source("http://bioconductor.org/biocLite.R")
#biocLite("hthgu133acdf")
require("affy")
require("R.utils")
require("stringr")
#require("heatmap3")
#require("GMD")
#install.packages("gplots")
require("gplots")
g <- ggheat(df=h,ColV = F,RowV = F, colslider=colslider, rowslider=d_col,colnames = T, rownames = F,main = g_id,lhei = lhei, lwid = lwid, lmat = lmat,font.size = font_size)
ggsave(filename = paste(g_id,".tiff",sep = ""),plot = g$plot_data,dpi = 300, width = unit(9, "cm"),height = unit(12,"cm"))
ggsave(filename = paste(g_id,".tiff",sep = ""),plot = g$plot_data,dpi = 300, width = unit(9, "cm"),height = unit(8,"cm"))
lhei <- c(0.12,0.4,0.3,0.1,1.4)
g <- ggheat(df=h,ColV = F,RowV = F, colslider=colslider, rowslider=d_col,colnames = T, rownames = F,main = g_id,lhei = lhei, lwid = lwid, lmat = lmat,font.size = font_size)
ggsave(filename = paste(g_id,".tiff",sep = ""),plot = g$plot_data,dpi = 300, width = unit(9, "cm"))
